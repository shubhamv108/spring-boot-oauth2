name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build
      - name: Test Coverage Verification
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: jacocoTestCoverageVerification

#  docker:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 20
#        uses: actions/setup-java@v3
#        with:
#          java-version: '20'
#          distribution: 'temurin'
#      - name: Build with Gradle
#        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
#        with:
#          arguments: build
#      - name: Docker Login
#        env:
#          DOCKER_USER: ${{ secrets.DOCKER_USER }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/spring-boot-oauth:latest
#      - name: Docker Push To DockerHub
#        run: docker push ${{secrets.DOCKER_USER}}/spring-boot-oauth